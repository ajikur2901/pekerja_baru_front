[{"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/index.js":"1","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/App.js":"2","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/reportWebVitals.js":"3","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/Login.jsx":"4","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/Dashboard.jsx":"5","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputData.jsx":"6","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataPribadi.jsx":"7","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataAlamat.jsx":"8","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataKeluarga.jsx":"9","/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataBpjs.jsx":"10","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/index.js":"11","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/App.js":"12","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/reportWebVitals.js":"13","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Login.jsx":"14","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Dashboard.jsx":"15","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputData.jsx":"16","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataKeluarga.jsx":"17","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataPribadi.jsx":"18","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataAlamat.jsx":"19","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataBpjs.jsx":"20","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/index.js":"21","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/UserReducer.js":"22","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Actions/UserActions.js":"23","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/InputDataReducer.js":"24","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Actions/InputDataActions.js":"25","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputKeluargaBaru.jsx":"26","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataAlamatDaerah.jsx":"27","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/ListData.jsx":"28","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/ErrorReducer.js":"29","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Navigation.jsx":"30","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Setting.jsx":"31"},{"size":500,"mtime":1610942329160,"results":"32","hashOfConfig":"33"},{"size":669,"mtime":1610943756094,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610869528000,"results":"35","hashOfConfig":"33"},{"size":1799,"mtime":1610882732000,"results":"36","hashOfConfig":"33"},{"size":1721,"mtime":1611013300914,"results":"37","hashOfConfig":"33"},{"size":1088,"mtime":1611037395695,"results":"38","hashOfConfig":"33"},{"size":4823,"mtime":1611037862267,"results":"39","hashOfConfig":"33"},{"size":4404,"mtime":1611037771321,"results":"40","hashOfConfig":"33"},{"size":3422,"mtime":1611037681597,"results":"41","hashOfConfig":"33"},{"size":5712,"mtime":1611037444377,"results":"42","hashOfConfig":"33"},{"size":788,"mtime":1611703320875,"results":"43","hashOfConfig":"44"},{"size":3074,"mtime":1613550966958,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1610869528000,"results":"46","hashOfConfig":"44"},{"size":5607,"mtime":1613478517409,"results":"47","hashOfConfig":"44"},{"size":892,"mtime":1613546641515,"results":"48","hashOfConfig":"44"},{"size":5788,"mtime":1613205068036,"results":"49","hashOfConfig":"44"},{"size":4422,"mtime":1613204078597,"results":"50","hashOfConfig":"44"},{"size":13948,"mtime":1613199830647,"results":"51","hashOfConfig":"44"},{"size":14910,"mtime":1613377076542,"results":"52","hashOfConfig":"44"},{"size":13306,"mtime":1613386511614,"results":"53","hashOfConfig":"44"},{"size":306,"mtime":1613455363050,"results":"54","hashOfConfig":"44"},{"size":492,"mtime":1611798767312,"results":"55","hashOfConfig":"44"},{"size":1996,"mtime":1613471132093,"results":"56","hashOfConfig":"44"},{"size":2666,"mtime":1613203838930,"results":"57","hashOfConfig":"44"},{"size":9554,"mtime":1613386749282,"results":"58","hashOfConfig":"44"},{"size":9009,"mtime":1613205447901,"results":"59","hashOfConfig":"44"},{"size":3861,"mtime":1613377060118,"results":"60","hashOfConfig":"44"},{"size":2126,"mtime":1613547216316,"results":"61","hashOfConfig":"44"},{"size":890,"mtime":1613476307622,"results":"62","hashOfConfig":"44"},{"size":4783,"mtime":1613554711219,"results":"63","hashOfConfig":"44"},{"size":16342,"mtime":1613558458581,"results":"64","hashOfConfig":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1l8ldc8",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"25c0fl",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/index.js",[],["135","136"],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/App.js",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/reportWebVitals.js",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/Login.jsx",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/Dashboard.jsx",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputData.jsx",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataPribadi.jsx",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataAlamat.jsx",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataKeluarga.jsx",[],"/home/aji/Documents/node-prj/inputpekerjabaru/pekerja_baru2/src/Components/InputDataBpjs.jsx",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/index.js",[],["137","138"],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/App.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/reportWebVitals.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Login.jsx",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Dashboard.jsx",["139","140"],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputData.jsx",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataKeluarga.jsx",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataPribadi.jsx",["141","142"],"import React, { useEffect,useState } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport {\n    FormControlLabel, Grid, Radio, MenuItem\n} from '@material-ui/core';\nimport {\n    useSelector, useDispatch\n} from 'react-redux';\nimport {\n    saveDataPribadi,\n    getDataAgama\n} from '../Actions/InputDataActions';\n\nconst InputDataPribadi = () => {\n    const dataPribadiStore = useSelector(state => state.inputDataReducer.dataPribadi);\n    const masterAgamaStore = useSelector(state => state.inputDataReducer.masterAgama);\n\n    const dispatch = useDispatch();\n\n    const [nik,setNIK]                  = useState(dataPribadiStore.nik ? dataPribadiStore.nik : '' );\n    const [noKk,setNoKK]                = useState(dataPribadiStore.noKk ? dataPribadiStore.noKk : '' );\n    const [noNpwp,setNoNPWP]            = useState(dataPribadiStore.noNpwp ? dataPribadiStore.noNpwp : '' );\n    const [nama,setNama]                = useState(dataPribadiStore.nama ? dataPribadiStore.nama : '' );\n    const [jenKel,setJenKel]            = useState(dataPribadiStore.jenKel ? dataPribadiStore.jenKel : '' );\n    const [agama,setAgama]              = useState(dataPribadiStore.agama ? dataPribadiStore.agama : '' );\n    const [nationality,setNationality]  = useState(dataPribadiStore.nationality ? dataPribadiStore.nationality : '' );\n    const [tmpLahir,setTmpLahir]        = useState(dataPribadiStore.tmpLahir ? dataPribadiStore.tmpLahir : '' );\n    const [tglLahir,setTglLahir]        = useState(dataPribadiStore.tglLahir ? dataPribadiStore.tglLahir : '2021-01-01');\n    const [golDarah,setGolDarah]        = useState(dataPribadiStore.golDarah ? dataPribadiStore.golDarah : '');\n    const [noHp,setNoHp]                = useState(dataPribadiStore.noHp ? dataPribadiStore.noHp : '');\n    const [noTelepon,setNoTelepon]      = useState(dataPribadiStore.noTelepon ? dataPribadiStore.noTelepon : '');\n    const [email,setEmail]              = useState(dataPribadiStore.email ? dataPribadiStore.email : '');\n    const [statNikah,setStatNikah]      = useState(dataPribadiStore.statNikah ? dataPribadiStore.statNikah : '');\n    const [tglNikah,setTglNikah]        = useState(dataPribadiStore.tglNikah ? dataPribadiStore.tglNikah : '2021-01-01');\n    const [jmlAnak,setJmlAnak]          = useState(dataPribadiStore.jmlAnak ? dataPribadiStore.jmlAnak : '');\n\n    const handleInputChange = (event) => {\n        switch(event.target.id){\n            case 'nik':\n                setNIK(event.target.value);\n                break;\n            case 'noKk':\n                setNoKK(event.target.value);\n                break;\n            case 'noNpwp':\n                setNoNPWP(event.target.value);\n                break;\n            case 'nama':\n                setNama(event.target.value);\n                break;\n            case 'tmpLahir':\n                setTmpLahir(event.target.value);\n                break;\n            case 'tglLahir':\n                setTglLahir(event.target.value);\n                break;\n            case 'noHp':\n                setNoHp(event.target.value);\n                break;\n            case 'noTelepon':\n                setNoTelepon(event.target.value);\n                break;\n            case 'email':\n                setEmail(event.target.value);\n                break;\n            case 'tglNikah':\n                setTglNikah(event.target.value);\n                break;\n            case 'jmlAnak':\n                setJmlAnak(event.target.value);\n                break;\n            default: \n                return;\n        }\n    }\n\n    const handleSelectionChange = (event) => {\n        switch(event.target.name){\n            case 'jenKel':\n                setJenKel(event.target.value);\n                break;\n            case 'nationality':\n                setNationality(event.target.value);\n                break;\n            case 'statNikah':\n                setStatNikah(event.target.value);\n                break;\n            case 'agama':\n                setAgama(event.target.value);\n                break;\n            case 'golDarah':\n                setGolDarah(event.target.value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const saveState = () => {\n        let dataPribadi = {\n            nik         : nik,\n            noKk        : noKk,\n            noNpwp      : noNpwp,\n            nama        : nama,\n            jenKel      : jenKel,\n            agama       : agama,\n            nationality : nationality,\n            tmpLahir    : tmpLahir,\n            tglLahir    : tglLahir,\n            golDarah    : golDarah,\n            noHp        : noHp,\n            noTelepon   : noTelepon,\n            email       : email,\n            statNikah   : statNikah,\n            tglNikah    : tglNikah,\n            jmlAnak     : jmlAnak,\n        }\n        dispatch(saveDataPribadi(dataPribadi));\n    }\n\n    \n    const dataGolDarah = [\n        {\n            gol_darah:'A'\n        },\n        {\n            gol_darah:'B'\n        },\n        {\n            gol_darah:'O'\n        },\n        {\n            gol_darah:'AB'\n        },\n    ]\n    \n    \n    useEffect(() => { saveState(); },[nik,noKk,noNpwp,nama,jenKel,agama,nationality,tmpLahir,tglLahir,golDarah,noHp,noTelepon,email,statNikah,tglNikah,jmlAnak])\n    \n    const dataAgama = masterAgamaStore || [];\n    useEffect(() => { if (dataAgama.length === 0) dispatch(getDataAgama()) },[])\n\n    return(\n        <div>\n            <form>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"nik\"\n                        label=\"NIK\"\n                        value={nik}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"noKk\"\n                        label=\"No. KK\"\n                        value={noKk}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"noNpwp\"\n                        label=\"No. NPWP\"\n                        value={noNpwp}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                        id=\"nama\"\n                        label=\"Nama Lengkap\"\n                        value={nama}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Jenis Kelamin</FormLabel>\n                            <RadioGroup aria-label=\"Jenis Kelamin\" name=\"jenKel\" value={jenKel} onChange={handleSelectionChange} row>\n                                <FormControlLabel value=\"L\" control={<Radio/>} label=\"Laki-Laki\" />\n                                <FormControlLabel value=\"P\" control={<Radio/>} label=\"Perempuan\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Kewarganegaraan</FormLabel>\n                            <RadioGroup aria-label=\"Kewarganegaraan\" name=\"nationality\" value={nationality} onChange={handleSelectionChange} row>\n                                <FormControlLabel value=\"WNI\" control={<Radio/>} label=\"WNI\" />\n                                <FormControlLabel value=\"WNA\" control={<Radio/>} label=\"WNA\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <TextField\n                        id=\"agama\"\n                        label=\"Agama\"\n                        name=\"agama\"\n                        value={agama}\n                        onChange={handleSelectionChange}\n                        fullWidth\n                        select\n                        >\n                            {\n                                dataAgama.map((option) => (\n                                    <MenuItem key={option.agama} value={option.agama}>\n                                        {option.agama}\n                                    </MenuItem>\n                                ))\n                            }\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <TextField\n                        id=\"golDarah\"\n                        label=\"Gol. Darah\"\n                        name=\"golDarah\"\n                        value={golDarah}\n                        onChange={handleSelectionChange}\n                        fullWidth\n                        select\n                        >\n                            {\n                                dataGolDarah.map((option) => (\n                                    <MenuItem key={option.gol_darah} value={option.gol_darah}>\n                                        {option.gol_darah}\n                                    </MenuItem>\n                                ))\n                            }\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} lg={8}>\n                        <TextField\n                        id=\"tmpLahir\"\n                        label=\"Tempat Lahir\"\n                        value={tmpLahir}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"tglLahir\"\n                        label=\"Tanggal Lahir\"\n                        value={tglLahir}\n                        onChange={handleInputChange}\n                        fullWidth\n                        type=\"date\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"noHp\"\n                        label=\"No. Handphone\"\n                        value={noHp}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"noTelepon\"\n                        label=\"No. Telephone\"\n                        value={noTelepon}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        value={email}\n                        onChange={handleInputChange}\n                        fullWidth\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Status Pernikahan</FormLabel>\n                            <RadioGroup aria-label=\"Status Pernikahan\" name=\"statNikah\" value={statNikah} onChange={handleSelectionChange} row>\n                                <FormControlLabel value=\"1\" control={<Radio/>} label=\"Menikah\" />\n                                <FormControlLabel value=\"0\" control={<Radio/>} label=\"Belum Menikah\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} lg={4} className={statNikah === \"1\" ? '' : 'hidden'}>\n                        <TextField\n                        id=\"tglNikah\"\n                        label=\"Tanggal Nikah\"\n                        value={tglNikah}\n                        onChange={handleInputChange}\n                        fullWidth\n                        type=\"date\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4} className={statNikah === \"1\" ? '' : 'hidden'}>\n                        <TextField\n                        id=\"jmlAnak\"\n                        label=\"Jumlah Anak\"\n                        value={jmlAnak}\n                        onChange={handleInputChange}\n                        fullWidth\n                        type=\"number\"\n                        autoComplete=\"off\"\n                        noValidate\n                        />\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default InputDataPribadi;","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataAlamat.jsx",["143","144"],"import React from 'react';\nimport {\n    Grid, MenuItem,FormControlLabel,\n    TextField, Typography, Checkbox\n} from '@material-ui/core';\nimport {\n    getDataStatusRumah,\n    saveDataAlamat\n} from '../Actions/InputDataActions';\nimport {\n    useSelector, useDispatch\n} from 'react-redux';\nimport InputDataAlamatDaerah from './InputDataAlamatDaerah';\n\nconst InputDataAlamat = () => {\n    const dataAlamatStore = useSelector(state => state.inputDataReducer.dataAlamat);\n    const masterStatusRumahStore = useSelector(state => state.inputDataReducer.masterStatusRumah);\n\n    const dispatch = useDispatch();\n\n    const [alamatKtp, setAlamatKtp] = React.useState(dataAlamatStore.alamatKtp  ? dataAlamatStore.alamatKtp : '');\n    const [provKtp, setProvKtp]     = React.useState(dataAlamatStore.provKtp    ? dataAlamatStore.provKtp : {});\n    const [kabKtp, setKabKtp]       = React.useState(dataAlamatStore.kabKtp     ? dataAlamatStore.kabKtp : {});\n    const [kecKtp, setKecKtp]       = React.useState(dataAlamatStore.kecKtp     ? dataAlamatStore.kecKtp : {});\n    const [kelKtp, setKelKtp]       = React.useState(dataAlamatStore.kelKtp     ? dataAlamatStore.kelKtp : {});\n    const [posKtp, setPosKtp]       = React.useState(dataAlamatStore.posKtp     ? dataAlamatStore.posKtp : '');\n    const [statRumahKtp, setStatRumahKtp] = React.useState(dataAlamatStore.statRumahKtp ? dataAlamatStore.statRumahKtp : '');\n    \n    const [alamatDom, setAlamatDom] = React.useState(dataAlamatStore.alamatDom  ? dataAlamatStore.alamatDom : '');\n    const [provDom, setProvDom]     = React.useState(dataAlamatStore.provDom    ? dataAlamatStore.provDom : {});\n    const [kabDom, setKabDom]       = React.useState(dataAlamatStore.kabDom     ? dataAlamatStore.kabDom : {});\n    const [kecDom, setKecDom]       = React.useState(dataAlamatStore.kecDom     ? dataAlamatStore.kecDom : {});\n    const [kelDom, setKelDom]       = React.useState(dataAlamatStore.kelDom     ? dataAlamatStore.kelDom : {});\n    const [posDom, setPosDom]       = React.useState(dataAlamatStore.posDom     ? dataAlamatStore.posDom : '');\n    const [statRumahDom, setStatRumahDom] = React.useState(dataAlamatStore.statRumahDom ? dataAlamatStore.statRumahDom : '');\n\n    const [checkSama, setCheckSama] = React.useState(false);\n\n    const handleInputChange = (event) => {\n        switch(event.target.id){\n            case 'alamatKtp':\n                setAlamatKtp(event.target.value);\n                break;\n            case 'alamatDom':\n                setAlamatDom(event.target.value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleSelectionChange = (event) => {\n        switch(event.target.name){\n            case 'statRumahKtp':\n                setStatRumahKtp(event.target.value);\n                break;\n            case 'statRumahDom':\n                setStatRumahDom(event.target.value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleCheck = (event) => {\n        setCheckSama(event.target.checked)\n    }\n\n    React.useEffect(() => {\n        if(checkSama){\n            setAlamatDom(alamatKtp)\n            setProvDom(provKtp)\n            setKabDom(kabKtp)\n            setKecDom(kecKtp)\n            setKelDom(kelKtp)\n            setPosDom(posKtp)\n            setStatRumahDom(statRumahKtp)\n        }\n    },[checkSama,alamatKtp,provKtp,kabKtp,kecKtp,kelKtp,posKtp,statRumahKtp])\n\n    // start kode pos ktp\n    React.useEffect(() => {\n        if(kelKtp !== null && kelKtp.id){\n            (async () => {\n                const kelIdEncoded = encodeURIComponent(kelKtp.id);\n                const response = await fetch('https://api-pb.tuturcinatur.xyz/api/kodepos/search?kelurahan_id=' + kelIdEncoded , {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Accept\": \"application/json\",\n                            \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                        }\n                    });\n                const kodePos = await response.json();\n                if(Array.isArray(kodePos)){\n                    setPosKtp(kodePos[0].no_kodepos);\n                }\n            })(); \n        }\n    },[kelKtp])\n\n    // start kode pos domisili\n    React.useEffect(() => {\n        if(kelDom !== null && kelDom.id){\n            (async () => {\n                const kelIdEncoded = encodeURIComponent(kelDom.id);\n                const response = await fetch('https://api-pb.tuturcinatur.xyz/api/kodepos/search?kelurahan_id=' + kelIdEncoded , {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Accept\": \"application/json\",\n                            \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                        }\n                    });\n                const kodePos = await response.json();\n                if(Array.isArray(kodePos)){\n                    setPosDom(kodePos[0].no_kodepos);\n                }\n            })(); \n        }\n    },[kelDom])\n\n    //  start status rumah ktp & domisili\n    const dataStatusRumah = masterStatusRumahStore || [];\n    React.useEffect(() => { if (dataStatusRumah.length === 0){ dispatch(getDataStatusRumah()) } },[])\n\n    // save data\n    const saveState = () => {\n        let dataAlamat = {\n            alamatKtp   : alamatKtp,\n            provKtp     : provKtp,\n            kabKtp      : kabKtp,\n            kecKtp      : kecKtp,\n            kelKtp      : kelKtp,\n            posKtp      : posKtp,\n            statRumahKtp: statRumahKtp,\n            alamatDom   : alamatDom,\n            provDom     : provDom,\n            kabDom      : kabDom,\n            kecDom      : kecDom,\n            kelDom      : kelDom,\n            posDom      : posDom,\n            statRumahDom: statRumahDom\n        }\n\n        dispatch(saveDataAlamat(dataAlamat));\n    }\n    React.useEffect(() => { saveState(); },[alamatKtp,provKtp,kabKtp,kecKtp,kelKtp,posKtp,statRumahKtp,provDom,kabDom,kecDom,kelDom])\n    \n    const handleUpdateProvDom = (data) => {\n        setProvDom(data);\n    }\n\n    const handleUpdateKabDom = (data) => {\n        setKabDom(data);\n    }\n    \n    const handleUpdateKecDom = (data) => {\n        setKecDom(data);\n    }\n    \n    const handleUpdateKelDom = (data) => {\n        setKelDom(data);\n    }\n\n    const handleUpdateProvKtp = (data) => {\n        setProvKtp(data);\n    }\n\n    const handleUpdateKabKtp = (data) => {\n        setKabKtp(data);\n    }\n    \n    const handleUpdateKecKtp = (data) => {\n        setKecKtp(data);\n    }\n    \n    const handleUpdateKelKtp = (data) => {\n        setKelKtp(data);\n    }\n\n\n    return(\n        <div>\n            <form>\n                <Grid container spacing={3}>\n                    <Grid container item xs={12} lg={6} spacing={3}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h4\" color=\"initial\">\n                                Alamat Sesuai KTP\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                            id=\"alamatKtp\"\n                            label=\"Alamat Rumah\"\n                            value={alamatKtp}\n                            onChange={handleInputChange}\n                            fullWidth\n                            multiline\n                            rowsMax={4}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"provinsiKtp\"\n                                label=\"Provinsi\"\n                                onChange={handleUpdateProvKtp}\n                                value={provKtp}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"kabupatenKtp\"\n                                label=\"Kabupaten\"\n                                onChange={handleUpdateKabKtp}\n                                value={kabKtp}\n                                provinsi={provKtp}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"kecamatanKtp\"\n                                label=\"Kecamatan\"\n                                onChange={handleUpdateKecKtp}\n                                value={kecKtp}\n                                kabupaten={kabKtp}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"kelurahanKtp\"\n                                label=\"Kelurahan\"\n                                onChange={handleUpdateKelKtp}\n                                value={kelKtp}\n                                kecamatan={kecKtp}\n                            />\n                        </Grid>\n                        <Grid item xs={12} lg={4}>\n                            <TextField\n                            id=\"posKtp\"\n                            label=\"Kode Pos\"\n                            value={posKtp}\n                            onChange={handleInputChange}\n                            fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <TextField\n                            id=\"statRumahKtp\"\n                            label=\"Status Rumah\"\n                            name=\"statRumahKtp\"\n                            value={statRumahKtp}\n                            onChange={handleSelectionChange}\n                            fullWidth\n                            select\n                            >\n                                {\n                                    dataStatusRumah.map((option) => (\n                                        <MenuItem key={option.status} value={option.status}>\n                                            {option.status}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12} lg={6} spacing={3}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h4\" color=\"initial\">\n                                Alamat Domisili\n                                <FormControlLabel\n                                    label=\"Alamat Domisili sama dengan alamat KTP\"\n                                    control={\n                                        <Checkbox \n                                            checked={checkSama} \n                                            onChange={handleCheck}\n                                            name=\"checkSama\"\n                                            color=\"primary\"\n                                            />\n                                    }\n                                    />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                            id=\"alamatDom\"\n                            label=\"Alamat Rumah\"\n                            value={alamatDom}\n                            onChange={handleInputChange}\n                            fullWidth\n                            multiline\n                            rowsMax={4}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"provinsiDomisili\"\n                                label=\"Provinsi\"\n                                onChange={handleUpdateProvDom}\n                                value={provDom}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"kabupatenDomisili\"\n                                label=\"Kabupaten\"\n                                onChange={handleUpdateKabDom}\n                                value={kabDom}\n                                provinsi={provDom}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"kecamatanDomisili\"\n                                label=\"Kecamatan\"\n                                onChange={handleUpdateKecDom}\n                                value={kecDom}\n                                kabupaten={kabDom}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <InputDataAlamatDaerah \n                                id=\"kelurahanDomisili\"\n                                label=\"Kelurahan\"\n                                onChange={handleUpdateKelDom}\n                                value={kelDom}\n                                kecamatan={kecDom}\n                            />\n                        </Grid>\n                        <Grid item xs={12} lg={4}>\n                            <TextField\n                            id=\"posDom\"\n                            label=\"Kode Pos\"\n                            value={posDom}\n                            onChange={handleInputChange}\n                            fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <TextField\n                            id=\"statRumahDom\"\n                            label=\"Status Rumah\"\n                            name=\"statRumahDom\"\n                            value={statRumahDom}\n                            onChange={handleSelectionChange}\n                            fullWidth\n                            select\n                            >\n                                {\n                                    dataStatusRumah.map((option) => (\n                                        <MenuItem key={option.status} value={option.status}>\n                                            {option.status}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\nexport default InputDataAlamat;","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataBpjs.jsx",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useEffect } from 'react';\nimport { \n    Grid, TextField, FormControl, FormLabel, RadioGroup,\n    FormControlLabel, Radio, MenuItem \n} from '@material-ui/core';\nimport {\n    useSelector, useDispatch\n} from 'react-redux';\nimport {\n    saveDataBpjs, getDataHubunganKerja\n} from '../Actions/InputDataActions';\n\n\nconst InputDataBpjs = () => {\n    const dataPribadiStore  = useSelector(state => state.inputDataReducer.dataPribadi);\n    const dataAlamatStore   = useSelector(state => state.inputDataReducer.dataAlamat);\n    const dataKeluargaStore = useSelector(state => state.inputDataReducer.dataKeluarga);\n    const dataBpjsStore    = useSelector(state => state.inputDataReducer.dataBpjs);\n    const dataHubunganKerjaStore = useSelector(state => state.inputDataReducer.masterHubunganKerja);\n\n    const dispatch = useDispatch();\n    \n    // from Data Pribadi\n    const [nama,setNama]                = React.useState(dataPribadiStore.nama      ? dataPribadiStore.nama : '');\n    const [tmpLahir,setTmpLahir]        = React.useState(dataPribadiStore.tmpLahir  ? dataPribadiStore.tmpLahir : '');\n    const [tglLahir,setTglLahir]        = React.useState(dataPribadiStore.tglLahir  ? dataPribadiStore.tglLahir : '2021-01-01');\n    const [jenKel,setJenKel]            = React.useState(dataPribadiStore.jenKel    ? dataPribadiStore.jenKel : '');\n    const [noHp,setnoHp]                = React.useState(dataPribadiStore.noHp      ? dataPribadiStore.noHp : '');\n    const [email,setEmail]              = React.useState(dataPribadiStore.email     ? dataPribadiStore.email : '');\n    const [noNpwp,setNoNPWP]            = React.useState(dataPribadiStore.noNpwp    ? dataPribadiStore.noNpwp : '');\n\n    // form data alamat domisili\n    const [alamatDom, setAlamatDomisili]= React.useState(dataAlamatStore.alamatDom              ? dataAlamatStore.alamatDom : '');\n    const [provDom, setProvDomisili]    = React.useState(dataAlamatStore.provDom.nama_provinsi  ? dataAlamatStore.provDom.nama_provinsi : '');\n    const [kabDom, setKabDomisili]      = React.useState(dataAlamatStore.kabDom.nama_kabupaten  ? dataAlamatStore.kabDom.nama_kabupaten : '');\n    const [posDom, setPosDomisili]      = React.useState(dataAlamatStore.posDom                 ? dataAlamatStore.posDom : '');\n\n    // from data keluarga\n    \n    // input\n    const [instansi, setInstansi]       = React.useState(dataBpjsStore.instansi     ? dataBpjsStore.instansi : 'CV. Karya Hidup Sentosa');\n    const [peserta, setPeserta]         = React.useState(dataBpjsStore.peserta      ? dataBpjsStore.peserta : '');\n    const [noPeserta, setNoPeserta]     = React.useState(dataBpjsStore.noPeserta    ? dataBpjsStore.noPeserta : '');\n    const [statPegawai, setStatPegawai] = React.useState(dataBpjsStore.statPegawai  ? dataBpjsStore.statPegawai : '');\n    const [fasKes, setFaskes]           = React.useState(dataBpjsStore.fasKes       ? dataBpjsStore.fasKes : '');\n    const [ibuKandung,setIbuKandung]    = React.useState(dataBpjsStore.ibuKandung   ? dataBpjsStore.ibuKandung : '');\n    \n    //cari ibu kandung\n    const findIbuKandung = (data) => {\n        return data.filter((value) => {\n            if(value.hubKeluarga === 'ibu kandung') return value;\n        })\n    }\n    \n    React.useEffect(() => {\n        let ibu = findIbuKandung(dataKeluargaStore);\n        if(!isIbuKandungEmpty()) setIbuKandung(ibu[0].nama);\n    },[])\n\n    const isIbuKandungEmpty = () => {\n        let ibu = findIbuKandung(dataKeluargaStore);\n        return ibu.length > 0 ? false : true;\n    }\n\n    const handleInputChange = (event) => {\n        switch(event.target.id){\n            case 'noPeserta':\n                setNoPeserta(event.target.value);\n                break;\n            case 'fasKes':\n                setFaskes(event.target.value);\n                break;\n            case 'ibuKandung':\n                if(!isIbuKandungEmpty()) setIbuKandung(event.target.value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleSelectionChange = (event) => {\n        switch(event.target.name){\n            case 'peserta':\n                setPeserta(event.target.value);\n                break;\n            case 'statPegawai':\n                setStatPegawai(event.target.value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const saveState = () => {\n        let dataBpjs = {\n            'instansi'      : instansi,\n            'peserta'       : peserta,\n            'noPeserta'     : noPeserta,\n            'statPegawai'   : statPegawai,\n            'fasKes'        : fasKes,\n            'ibuKandung'    : ibuKandung\n        }\n\n        dispatch(saveDataBpjs(dataBpjs));\n    }\n\n    useEffect(() => {\n        saveState();\n    },[instansi,peserta,noPeserta,statPegawai,fasKes,ibuKandung])\n\n    const dataHubunganKerja = dataHubunganKerjaStore || [];\n    useEffect(() => { if (dataHubunganKerja.length === 0){ dispatch(getDataHubunganKerja()) } },[])\n\n    return(\n        <div>\n            <form>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <TextField\n                          id=\"instansi\"\n                          label=\"Nama Badan Usaha/Instansi/Asosiasi\"\n                          value={instansi}\n                        //   onChange={handleInputChange}\n                          fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Apakah sebelumnya sudah menjadi peserta ?</FormLabel>\n                            <RadioGroup aria-label=\"peserta\" name=\"peserta\" value={peserta} onChange={handleSelectionChange} row>\n                                <FormControlLabel value=\"0\" control={<Radio/>} label=\"Belum\" />\n                                <FormControlLabel value=\"1\" control={<Radio/>} label=\"Sudah\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} className={peserta === \"1\" ? '' : 'hidden'}>\n                        <TextField\n                          id=\"noPeserta\"\n                          label=\"Bila sudah, mohon lengkapi nomor referensi (nomor peserta) BPJS ketenagakerjaan\"\n                          value={noPeserta}\n                          onChange={handleInputChange}\n                          fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                        id=\"nama\"\n                        label=\"Nama Lengkap Tenaga Kerja\"\n                        value={nama}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={8}>\n                        <TextField\n                        id=\"tmpLahir\"\n                        label=\"Tempat Lahir\"\n                        value={tmpLahir}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"tglLahir\"\n                        label=\"Tanggal Lahir\"\n                        value={tglLahir}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        type=\"date\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                        id=\"jenKel\"\n                        label=\"Jenis Kelamin\"\n                        value={jenKel}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                        id=\"ibuKandung\"\n                        label=\"Nama Lengkap Ibu Kandung Tenaga Kerja\"\n                        value={ibuKandung}\n                        onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={12}>\n                        <TextField\n                        id=\"alamatDom\"\n                        label=\"Alamat Lengkap Tenaga Kerja\"\n                        value={alamatDom}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        multiline\n                        rowsMax={4}\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"posDom\"\n                        label=\"Kode Pos\"\n                        value={posDom}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"kabDom\"\n                        label=\"Kabupaten / Kota\"\n                        value={kabDom}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"provDom\"\n                        label=\"Provinsi\"\n                        value={provDom}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"noHp\"\n                        label=\"No. Telephone \\ Handphone\"\n                        value={noHp}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"email\"\n                        label=\"Alamat Email\"\n                        value={email}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={4}>\n                        <TextField\n                        id=\"noNpwp\"\n                        label=\"Nomor Pokok Wajib Pajak (NPWP)\"\n                        value={noNpwp}\n                        // onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <TextField\n                        id=\"statPegawai\"\n                        label=\"Status Pegawai\"\n                        name=\"statPegawai\"\n                        value={statPegawai}\n                        onChange={handleSelectionChange}\n                        fullWidth\n                        select\n                        >\n                            {\n                                dataHubunganKerja.map((option) => (\n                                    <MenuItem key={option.hubungan} value={option.hubungan}>\n                                        {option.hubungan}\n                                    </MenuItem>\n                                ))\n                            }\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <TextField\n                        id=\"fasKes\"\n                        label=\"Kelas Rawat dan Faskes (Tingkat 1)\"\n                        value={fasKes}\n                        onChange={handleInputChange}\n                        fullWidth\n                        />\n                    </Grid>\n                </Grid>\n            </form>\n            <div className=\"w-full p-4\">\n                <div className=\"formGroup hidden md:block\">\n                    *Untuk kode Faskes dapat diakses dan lihat pada laman&nbsp;\n                    <a \n                        className=\"text-blue-600 hover:text-purple-500\"\n                        href=\"https://faskes.bpjs-kesehatan.go.id/aplicares/#/app/pnama/bylocation\" \n                        target=\"_blank\"\n                        rel=\"noreferrer\">\n                            https://faskes.bpjs-kesehatan.go.id/aplicares/#/app/pnama/bylocation\n                        </a>\n                </div>\n                <div className=\"formGroup block md:hidden\">\n                    *Untuk melihat kode Faskes &nbsp;\n                    <a \n                        className=\"text-blue-600 hover:text-purple-500\"\n                        href=\"https://faskes.bpjs-kesehatan.go.id/aplicares/#/app/pnama/bylocation\" \n                        target=\"_blank\"\n                        rel=\"noreferrer\">\n                            klik disini!\n                        </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InputDataBpjs;","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/index.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/UserReducer.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Actions/UserActions.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/InputDataReducer.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Actions/InputDataActions.js",["161"],"// action creator\n\nconst setDataPribadi            = (payload) => ({type: \"SET_DATA_PRIBADI\", payload});\nconst setMasterAgama            = (payload) => ({type: \"SET_MASTER_AGAMA\", payload});\nconst setMasterHubunganKeluarga = (payload) => ({type: \"SET_MASTER_HUBUNGAN_KELUARGA\", payload});\nconst setMasterHubunganKerja    = (payload) => ({type: \"SET_MASTER_HUBUNGAN_KERJA\", payload});\nconst setMasterStatusRumah      = (payload) => ({type: \"SET_MASTER_STATUS_RUMAH\", payload});\nconst setDataAlamat             = (payload) => ({type: \"SET_DATA_ALAMAT\", payload});\nconst setDataKeluarga           = (payload) => ({type: \"SET_DATA_KELUARGA\", payload});\nconst updateDataKeluarga        = (payload) => ({type: \"UPDATE_DATA_KELUARGA\", payload});\nconst deleteDataKeluarga        = (payload) => ({type: \"DELETE_DATA_KELUARGA\", payload});\nconst setInputKeluargaBaru      = (payload) => ({type: \"SET_INPUT_KELUARGA_BARU\", payload});\nconst setDataBpjs               = (payload) => ({type: \"SET_DATA_BPJS\", payload})\n// methods\n\nexport const saveDataPribadi = (data) => dispatch => {\n    dispatch(setDataPribadi(data));\n}\n\nexport const saveDataAlamat = (data) => dispatch => {\n    dispatch(setDataAlamat(data));\n}\n\nexport const saveInputKeluargaBaru = (data) => dispatch => {\n    dispatch(setInputKeluargaBaru(data));\n}\n\nexport const saveDataKeluarga = (data,action) => dispatch => {\n    switch(action){\n        case 'save':\n            dispatch(setDataKeluarga(data))\n            break\n        case 'update':\n            dispatch(updateDataKeluarga(data))\n            break\n        case 'delete':\n            dispatch(deleteDataKeluarga(data))\n            break\n        default: return;\n    }\n}\n\nexport const saveDataBpjs = (data) => dispatch => {\n    dispatch(setDataBpjs(data));\n}\n\nexport const getDataAgama = () => dispatch => {\n\n    fetch('https://api-pb.tuturcinatur.xyz/api/agama', {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        }\n    })\n    .then(res => res.json())\n    .then(\n        (data) => {\n            if(!data.hasOwnProperty('error')){\n                dispatch(setMasterAgama(data));\n            }\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nexport const getDataHubunganKeluarga = () => dispatch => {\n\n    fetch('https://api-pb.tuturcinatur.xyz/api/hubungan_keluarga', {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        }\n    })\n    .then(res => res.json())\n    .then(\n        (data) => {\n            if(!data.hasOwnProperty('error')){\n                dispatch(setMasterHubunganKeluarga(data));\n            }\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nexport const getDataHubunganKerja = () => dispatch => {\n\n    fetch('https://api-pb.tuturcinatur.xyz/api/hubungan_kerja', {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        }\n    })\n    .then(res => res.json())\n    .then(\n        (data) => {\n            if(!data.hasOwnProperty('error')){\n                dispatch(setMasterHubunganKerja(data));\n            }\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nexport const getDataStatusRumah = () => dispatch => {\n\n    fetch('https://api-pb.tuturcinatur.xyz/api/status_rumah', {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        }\n    })\n    .then(res => res.json())\n    .then(\n        (data) => {\n            if(!data.hasOwnProperty('error')){\n                dispatch(setMasterStatusRumah(data));\n            }\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nconst sendDataAlamat = (data,id) => {\n    let dataFormKtp = new FormData();\n    dataFormKtp.append('id_pekerja', id)\n    dataFormKtp.append('alamat', data.alamatKtp)\n    dataFormKtp.append('provinsi', data.provKtp.nama_provinsi)\n    dataFormKtp.append('kabupaten', data.kabKtp.nama_kabupaten)\n    dataFormKtp.append('kecamatan', data.kecKtp.nama_kecamatan)\n    dataFormKtp.append('desa', data.kelKtp.nama_kelurahan)\n    dataFormKtp.append('kode_pos', data.posKtp)\n    dataFormKtp.append('status_rumah', data.statRumahKtp)\n    fetch('https://api-pb.tuturcinatur.xyz/api/dataAlamatRumah/simpan', {\n        method: 'POST',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        },\n        body: dataFormKtp\n    })\n    .then(res => res.json())\n    .then(\n        (result) => {\n            console.log(result);\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n\n    let dataFormDom = new FormData();\n    dataFormDom.append('id_pekerja',id)\n    dataFormDom.append('alamat', data.alamatDom)\n    dataFormDom.append('provinsi', data.provDom.nama_provinsi)\n    dataFormDom.append('kabupaten', data.kabDom.nama_kabupaten)\n    dataFormDom.append('kecamatan', data.kecDom.nama_kecamatan)\n    dataFormDom.append('desa', data.kelDom.nama_kelurahan)\n    dataFormDom.append('kode_pos', data.posDom)\n    dataFormDom.append('status_rumah', data.statRumahDom)\n    fetch('https://api-pb.tuturcinatur.xyz/api/dataAlamatDomisili/simpan', {\n        method: 'POST',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        },\n        body: dataFormDom\n    })\n    .then(res => res.json())\n    .then(\n        (result) => {\n            console.log(result);\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nconst sendDataKeluarga = (data,id) => {\n    data.map(value => {\n        let dataForm = new FormData();\n        dataForm.append('id_pekerja', id)\n        dataForm.append('nama', value.nama )\n        dataForm.append('hubungan_keluarga', value.hubKeluarga )\n        dataForm.append('tanggal_lahir', value.tglLahir )\n        dataForm.append('ditanggung', value.statDitanggung )\n        dataForm.append('status_nikah', value.statNikah )\n        dataForm.append('alamat', value.alamat )\n        fetch('https://api-pb.tuturcinatur.xyz/api/dataKeluarga/simpan', {\n            method: 'POST',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n            },\n            body: dataForm\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                console.log(result);\n            },\n            (error) => {\n                console.log(error)\n            }\n        )\n    })\n}\n\nconst sendDataBpjs = (data,id) => {\n    let dataForm = new FormData();\n    dataForm.append('id_pekerja', id)\n    dataForm.append('nama_instansi', data.instansi)\n    dataForm.append('sebelumnya_peserta', data.peserta)\n    dataForm.append('no_peserta', data.noPeserta)\n    dataForm.append('hubungan_kerja', data.statPegawai)\n    dataForm.append('fasilitas_kesehatan_1', data.faskes)\n    fetch('https://api-pb.tuturcinatur.xyz/api/dataBpjs/simpan', {\n        method: 'POST',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        },\n        body: dataForm\n    })\n    .then(res => res.json())\n    .then(\n        (result) => {\n            console.log(result);\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nexport const  saveInputData = (data) => dispatch => {\n    console.log(data);\n    let dataForm = new FormData();\n    let idPribadi = 0;\n    dataForm.append('nik',data.dataPribadi.nik);\n    dataForm.append('no_kk',data.dataPribadi.noKk);\n    dataForm.append('no_npwp',data.dataPribadi.noNpwp);\n    dataForm.append('nama',data.dataPribadi.Nama);\n    dataForm.append('jenis_kelamin',data.dataPribadi.jenKel);\n    dataForm.append('agama',data.dataPribadi.agama);\n    dataForm.append('kewarganegaraan',data.dataPribadi.nationality);\n    dataForm.append('tempat_lahir',data.dataPribadi.tmpLahir);\n    dataForm.append('tanggal_lahir',data.dataPribadi.tglLahir);\n    dataForm.append('gol_darah',data.dataPribadi.golDarah);\n    dataForm.append('no_handphone',data.dataPribadi.noHp);\n    dataForm.append('no_telephone',data.dataPribadi.noTelepon);\n    dataForm.append('email',data.dataPribadi.email);\n    dataForm.append('status_nikah',data.dataPribadi.statNikah);\n    dataForm.append('created_by',data.dataPribadi.jmlAnak);\n\n    fetch('https://api-pb.tuturcinatur.xyz/api/dataPribadi/simpan', {\n        method: 'POST',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`\n        },\n        body: dataForm\n    })\n    .then(res => res.json())\n    .then(\n        (result) => {\n            console.log(result);\n            if(result.hasOwnProperty('id')){\n                idPribadi = result.id;\n                sendDataAlamat(data.dataAlamat, idPribadi);\n                sendDataKeluarga(data.dataKeluarga, idPribadi);\n                sendDataBpjs(data.dataBpjs, idPribadi);\n            }\n        },\n        (error) => {\n            console.log(error)\n        }\n    )    \n}","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputKeluargaBaru.jsx",["162","163"],"import React, { useEffect } from 'react';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid,TextField,\n    FormControl, FormLabel,RadioGroup,FormControlLabel, Radio, MenuItem\n} from '@material-ui/core';\nimport {\n    PersonAdd\n} from '@material-ui/icons';\nimport {\n    saveDataKeluarga,\n    getDataHubunganKeluarga\n} from '../Actions/InputDataActions';\nimport {\n    useDispatch,useSelector\n} from 'react-redux';\n\nconst InputKeluargaBaru = () => {\n    const masterHubunganKeluargaStore   = useSelector(state => state.inputDataReducer.masterHubunganKeluarga);\n    const inputKeluargaBaruStore        = useSelector(state => state.inputDataReducer.inputKeluargaBaru);\n\n    const dispatch = useDispatch();\n\n    const [addKeluarga, setAddKeluarga] = React.useState(true);\n    const [open, setOpen]               = React.useState(false);\n    const [nama, setNama]               = React.useState('');\n    const [alamat, setAlamat]           = React.useState('');\n    const [hubKeluarga, setHubKeluarga] = React.useState('');\n    const [tglLahir, setTglLahir]       = React.useState('2000-01-01');\n    const [statDitanggung, setStatDitanggung] = React.useState('');\n    const [statNikah, setStatNikah]     = React.useState('');\n    const openDialogTime = addKeluarga ? Math.floor(Date.now() / 1000) : inputKeluargaBaruStore.openDialogTime\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        setAddKeluarga(true);\n        handleReset();\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handleReset = () => {\n        setNama('');\n        setAlamat('');\n        setHubKeluarga('');\n        setTglLahir('2000-01-01');\n        setStatDitanggung('');\n        setStatNikah('');\n    }\n    \n    const handleLoad = () => {\n        setNama(inputKeluargaBaruStore.nama);\n        setAlamat(inputKeluargaBaruStore.alamat);\n        setHubKeluarga(inputKeluargaBaruStore.hubKeluarga);\n        setTglLahir(inputKeluargaBaruStore.tglLahir);\n        setStatDitanggung(inputKeluargaBaruStore.statDitanggung);\n        setStatNikah(inputKeluargaBaruStore.statNikah);\n    }\n\n    const handleInputChange = (event) => {\n        switch(event.target.id){\n            case 'nama':\n                setNama(event.target.value);\n                break;\n            case 'alamat':\n                setAlamat(event.target.value);\n                break;\n            case 'tglLahir':\n                setTglLahir(event.target.value);\n                break;\n            default: return;\n        }\n    }\n\n    const handleSelectionChange = (event) => {\n        switch(event.target.name) {\n            case 'statDitanggung':\n                setStatDitanggung(event.target.value);\n                break;\n            case 'statNikah':\n                setStatNikah(event.target.value);\n                break;\n            case 'hubKeluarga':\n                setHubKeluarga(event.target.value);\n                break;\n            default: return;\n        }\n    }\n\n    const dataHubunganKeluarga = masterHubunganKeluargaStore || [];\n    useEffect(() => { if(dataHubunganKeluarga.length === 0){ dispatch(getDataHubunganKeluarga()) }},[]);\n\n    const saveState = (action) => {\n        let keluargaBaru = {\n            nama: nama,\n            alamat: alamat,\n            hubKeluarga: hubKeluarga,\n            tglLahir: tglLahir,\n            statDitanggung: statDitanggung,\n            statNikah: statNikah,\n            openDialogTime: openDialogTime\n        }\n\n        dispatch(saveDataKeluarga(keluargaBaru,action));\n    }\n\n    const handleSave = () => {\n        saveState('save');\n        setOpen(false);\n    }\n\n    const handleDelete = () => {\n        saveState('delete');\n        setOpen(false);\n    }\n\n    const handleUpdate = () => {\n        saveState('update');\n        setOpen(false);\n    }\n\n    useEffect(() => {\n        if(Object.keys(inputKeluargaBaruStore).length > 0 && inputKeluargaBaruStore.constructor === Object){\n            setOpen(true);\n            handleLoad();\n            setAddKeluarga(false);\n        }\n        \n    },[inputKeluargaBaruStore])\n\n    return(\n        <div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n                Tambah \n                <PersonAdd /> \n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"tambah keluarga\" fullWidth>\n                <DialogTitle>Tambah Anggota Keluarga</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        form untuk menambahkan data keluarga\n                    </DialogContentText>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                            id=\"nama\"\n                            label=\"Nama Lengkap\"\n                            value={nama}\n                            onChange={handleInputChange}\n                            fullWidth\n                            autoComplete=\"off\"\n                            noValidate\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                            id=\"alamat\"\n                            label=\"Alamat Rumah\"\n                            value={alamat}\n                            onChange={handleInputChange}\n                            fullWidth\n                            multiline\n                            rowsMax={4}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                            id=\"hubKeluarga\"\n                            label=\"Jenis Anggota\"\n                            name=\"hubKeluarga\"\n                            value={hubKeluarga}\n                            onChange={handleSelectionChange}\n                            fullWidth\n                            select\n                            >\n                                {\n                                    dataHubunganKeluarga.map((option) => (\n                                        <MenuItem key={option.hubungan} value={option.hubungan}>\n                                            {option.hubungan}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                            id=\"tglLahir\"\n                            label=\"Tanggal Lahir\"\n                            value={tglLahir}\n                            onChange={handleInputChange}\n                            fullWidth\n                            type=\"date\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Ditanggung</FormLabel>\n                                <RadioGroup aria-label=\"Ditanggung\" name=\"statDitanggung\" value={statDitanggung} onChange={handleSelectionChange} row>\n                                    <FormControlLabel value=\"1\" control={<Radio/>} label=\"Ya\" />\n                                    <FormControlLabel value=\"0\" control={<Radio/>} label=\"Tidak\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Status Pernikahan</FormLabel>\n                                <RadioGroup aria-label=\"Status Pernikahan\" name=\"statNikah\" value={statNikah} onChange={handleSelectionChange} row>\n                                    <FormControlLabel value=\"1\" control={<Radio/>} label=\"Menikah\" />\n                                    <FormControlLabel value=\"0\" control={<Radio/>} label=\"Belum Menikah\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} variant=\"contained\" color=\"default\">\n                        Cancel\n                    </Button>\n                    <Button onClick={addKeluarga ? handleReset : handleDelete} variant=\"contained\" color=\"secondary\">\n                        {addKeluarga ? 'Reset' : 'Delete'}\n                    </Button>\n                    <Button onClick={addKeluarga ? handleSave : handleUpdate} variant=\"contained\" color=\"primary\">\n                        {addKeluarga ? 'Save' : 'Update'}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default InputKeluargaBaru;","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/InputDataAlamatDaerah.jsx",["164"],"import React from 'react';\nimport {\n    TextField,CircularProgress\n} from '@material-ui/core';\nimport {\n    Autocomplete\n} from '@material-ui/lab';\n\nconst SelectDaerah = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading =  open && options.length === 0;\n\n    const getLink = (label) => {\n        switch(label){\n            case 'Provinsi':\n                return 'https://api-pb.tuturcinatur.xyz/api/provinsi';\n            case 'Kabupaten':\n                const provId = encodeURIComponent(props.provinsi.id ? props.provinsi.id : '');\n                return 'https://api-pb.tuturcinatur.xyz/api/kabupaten/search?provinsi_id=' + provId;\n            case 'Kecamatan':\n                const kabId = encodeURIComponent(props.kabupaten.id ? props.kabupaten.id : '');\n                return 'https://api-pb.tuturcinatur.xyz/api/kecamatan/search?kabupaten_id=' + kabId;\n            case 'Kelurahan':\n                const kecId = encodeURIComponent(props.kecamatan.id ? props.kecamatan.id : '');\n                return 'https://api-pb.tuturcinatur.xyz/api/kelurahan/search?kecamatan_id=' + kecId;\n            default: return ;\n        }\n    }\n\n    React.useEffect(() => {\n        let active = true;\n\n        if(!loading){\n            return undefined;\n        }\n\n        (async () => {\n            const response = await fetch(getLink(props.label), {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Accept\": \"application/json\",\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                    }\n                });\n            const daerah = await response.json();\n\n            if(active){\n                setOptions(daerah);\n            }\n        })(); \n\n        return () => {\n            active = false;\n        }\n    },[loading])\n\n    React.useEffect(() => {\n        if(!open) {\n            setOptions([]);\n        }\n    },[open]);\n\n    const handleInputChange = (event,newValue) => {\n        // setValue(newValue);\n        props.onChange(newValue);\n    }\n\n    const handleOptionLabel = (option) => {\n        switch(props.label){\n            case 'Provinsi':\n                return option.nama_provinsi ? option.nama_provinsi : '';\n            case 'Kabupaten':\n                return option.nama_kabupaten ? option.nama_kabupaten : '';\n            case 'Kecamatan':\n                return option.nama_kecamatan ? option.nama_kecamatan : '';\n            case 'Kelurahan':\n                return option.nama_kelurahan ? option.nama_kelurahan : '';\n            default: \n                return '';\n        }\n    }\n    \n    return(\n        <Autocomplete \n            id={props.id}\n            open={open}\n            onOpen={() => {\n                setOpen(true)\n            }}\n            onClose={() => {\n                setOpen(false)\n            }}\n            getOptionSelected={(option,value) => option.id === value.id}\n            getOptionLabel={(option) => handleOptionLabel(option)}\n            options={options}\n            loading={loading}\n            value={props.value}\n            onChange={handleInputChange}\n            renderInput={(params) => (\n                <TextField\n                    { ...params}\n                    label={props.label}\n                    InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null }\n                                {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        ),\n                    }}\n                />\n            )}\n        />\n    )\n}\n\nexport default SelectDaerah;\n","/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/ListData.jsx",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Reducers/ErrorReducer.js",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Navigation.jsx",[],"/home/aji/Documents/laravel-prj/github/pekerja_baru_front/src/Components/Setting.jsx",["165","166","167","168"],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"169","replacedBy":"173"},{"ruleId":"171","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":25,"column":11,"nodeType":"177","messageId":"178","endLine":25,"endColumn":20},{"ruleId":"175","severity":1,"message":"179","line":26,"column":11,"nodeType":"177","messageId":"178","endLine":26,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":141,"column":38,"nodeType":"182","endLine":141,"endColumn":160,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":144,"column":78,"nodeType":"182","endLine":144,"endColumn":80,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"186","line":123,"column":99,"nodeType":"182","endLine":123,"endColumn":101,"suggestions":"187"},{"ruleId":"180","severity":1,"message":"188","line":146,"column":44,"nodeType":"182","endLine":146,"endColumn":133,"suggestions":"189"},{"ruleId":"175","severity":1,"message":"190","line":24,"column":17,"nodeType":"177","messageId":"178","endLine":24,"endColumn":24},{"ruleId":"175","severity":1,"message":"191","line":25,"column":21,"nodeType":"177","messageId":"178","endLine":25,"endColumn":32},{"ruleId":"175","severity":1,"message":"192","line":26,"column":21,"nodeType":"177","messageId":"178","endLine":26,"endColumn":32},{"ruleId":"175","severity":1,"message":"193","line":27,"column":19,"nodeType":"177","messageId":"178","endLine":27,"endColumn":28},{"ruleId":"175","severity":1,"message":"194","line":28,"column":17,"nodeType":"177","messageId":"178","endLine":28,"endColumn":24},{"ruleId":"175","severity":1,"message":"195","line":29,"column":18,"nodeType":"177","messageId":"178","endLine":29,"endColumn":26},{"ruleId":"175","severity":1,"message":"196","line":30,"column":19,"nodeType":"177","messageId":"178","endLine":30,"endColumn":28},{"ruleId":"175","severity":1,"message":"197","line":33,"column":23,"nodeType":"177","messageId":"178","endLine":33,"endColumn":40},{"ruleId":"175","severity":1,"message":"198","line":34,"column":21,"nodeType":"177","messageId":"178","endLine":34,"endColumn":36},{"ruleId":"175","severity":1,"message":"199","line":35,"column":20,"nodeType":"177","messageId":"178","endLine":35,"endColumn":34},{"ruleId":"175","severity":1,"message":"200","line":36,"column":20,"nodeType":"177","messageId":"178","endLine":36,"endColumn":34},{"ruleId":"175","severity":1,"message":"201","line":41,"column":22,"nodeType":"177","messageId":"178","endLine":41,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":50,"column":36,"nodeType":"204","messageId":"205","endLine":50,"endColumn":38},{"ruleId":"180","severity":1,"message":"206","line":58,"column":7,"nodeType":"182","endLine":58,"endColumn":9,"suggestions":"207"},{"ruleId":"180","severity":1,"message":"181","line":109,"column":7,"nodeType":"182","endLine":109,"endColumn":65,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"209","line":112,"column":97,"nodeType":"182","endLine":112,"endColumn":99,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"211","line":192,"column":20,"nodeType":"204","messageId":"212","endLine":192,"endColumn":22},{"ruleId":"180","severity":1,"message":"213","line":92,"column":101,"nodeType":"182","endLine":92,"endColumn":103,"suggestions":"214"},{"ruleId":"180","severity":1,"message":"215","line":130,"column":7,"nodeType":"182","endLine":130,"endColumn":31,"suggestions":"216"},{"ruleId":"180","severity":1,"message":"217","line":56,"column":7,"nodeType":"182","endLine":56,"endColumn":16,"suggestions":"218"},{"ruleId":"180","severity":1,"message":"219","line":85,"column":84,"nodeType":"182","endLine":85,"endColumn":86,"suggestions":"220"},{"ruleId":"180","severity":1,"message":"221","line":87,"column":100,"nodeType":"182","endLine":87,"endColumn":102,"suggestions":"222"},{"ruleId":"180","severity":1,"message":"223","line":89,"column":106,"nodeType":"182","endLine":89,"endColumn":108,"suggestions":"224"},{"ruleId":"180","severity":1,"message":"186","line":91,"column":96,"nodeType":"182","endLine":91,"endColumn":98,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],["226"],["227"],"no-unused-vars","'userStore' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveState'. Either include it or remove the dependency array.","ArrayExpression",["228"],"React Hook useEffect has missing dependencies: 'dataAgama.length' and 'dispatch'. Either include them or remove the dependency array.",["229"],"React Hook React.useEffect has missing dependencies: 'dataStatusRumah.length' and 'dispatch'. Either include them or remove the dependency array.",["230"],"React Hook React.useEffect has a missing dependency: 'saveState'. Either include it or remove the dependency array.",["231"],"'setNama' is assigned a value but never used.","'setTmpLahir' is assigned a value but never used.","'setTglLahir' is assigned a value but never used.","'setJenKel' is assigned a value but never used.","'setnoHp' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setNoNPWP' is assigned a value but never used.","'setAlamatDomisili' is assigned a value but never used.","'setProvDomisili' is assigned a value but never used.","'setKabDomisili' is assigned a value but never used.","'setPosDomisili' is assigned a value but never used.","'setInstansi' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useEffect has missing dependencies: 'dataKeluargaStore' and 'isIbuKandungEmpty'. Either include them or remove the dependency array.",["232"],["233"],"React Hook useEffect has missing dependencies: 'dataHubunganKerja.length' and 'dispatch'. Either include them or remove the dependency array.",["234"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'dataHubunganKeluarga.length' and 'dispatch'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'handleLoad'. Either include it or remove the dependency array.",["236"],"React Hook React.useEffect has missing dependencies: 'getLink' and 'props.label'. Either include them or remove the dependency array.",["237"],"React Hook React.useEffect has missing dependencies: 'dataAgama.length' and 'dispatch'. Either include them or remove the dependency array.",["238"],"React Hook React.useEffect has missing dependencies: 'dataHubunganKerja.length' and 'dispatch'. Either include them or remove the dependency array.",["239"],"React Hook React.useEffect has missing dependencies: 'dataHubunganKeluarga.length' and 'dispatch'. Either include them or remove the dependency array.",["240"],["241"],"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"244","fix":"262"},{"desc":"254","fix":"263"},{"desc":"256","fix":"264"},{"desc":"246","fix":"265"},"Update the dependencies array to be: [nik, noKk, noNpwp, nama, jenKel, agama, nationality, tmpLahir, tglLahir, golDarah, noHp, noTelepon, email, statNikah, tglNikah, jmlAnak, saveState]",{"range":"266","text":"267"},"Update the dependencies array to be: [dataAgama.length, dispatch]",{"range":"268","text":"269"},"Update the dependencies array to be: [dataStatusRumah.length, dispatch]",{"range":"270","text":"271"},"Update the dependencies array to be: [alamatKtp, provKtp, kabKtp, kecKtp, kelKtp, posKtp, statRumahKtp, provDom, kabDom, kecDom, kelDom, saveState]",{"range":"272","text":"273"},"Update the dependencies array to be: [dataKeluargaStore, isIbuKandungEmpty]",{"range":"274","text":"275"},"Update the dependencies array to be: [instansi, peserta, noPeserta, statPegawai, fasKes, ibuKandung, saveState]",{"range":"276","text":"277"},"Update the dependencies array to be: [dataHubunganKerja.length, dispatch]",{"range":"278","text":"279"},"Update the dependencies array to be: [dataHubunganKeluarga.length, dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [handleLoad, inputKeluargaBaruStore]",{"range":"282","text":"283"},"Update the dependencies array to be: [getLink, loading, props.label]",{"range":"284","text":"285"},{"range":"286","text":"269"},{"range":"287","text":"279"},{"range":"288","text":"281"},{"range":"289","text":"271"},[5315,5437],"[nik, noKk, noNpwp, nama, jenKel, agama, nationality, tmpLahir, tglLahir, golDarah, noHp, noTelepon, email, statNikah, tglNikah, jmlAnak, saveState]",[5567,5569],"[dataAgama.length, dispatch]",[5307,5309],"[dataStatusRumah.length, dispatch]",[5987,6076],"[alamatKtp, provKtp, kabKtp, kecKtp, kelKtp, posKtp, statRumahKtp, provDom, kabDom, kecDom, kelDom, saveState]",[3387,3389],"[dataKeluargaStore, isIbuKandungEmpty]",[4760,4818],"[instansi, peserta, noPeserta, statPegawai, fasKes, ibuKandung, saveState]",[4977,4979],"[dataHubunganKerja.length, dispatch]",[3168,3170],"[dataHubunganKeluarga.length, dispatch]",[4076,4100],"[handleLoad, inputKeluargaBaruStore]",[1908,1917],"[getLink, loading, props.label]",[2496,2498],[2662,2664],[2840,2842],[2998,3000]]